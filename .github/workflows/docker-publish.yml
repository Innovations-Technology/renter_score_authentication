name: Docker Publish

on:
  push:
      branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
     # 1. Checkout code
     - name: Checkout code
       uses: actions/checkout@v3

     # 2. Set up jdk 17
     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
         distribution: 'temurin'
         java-version: '17'

    # 3. Set Gradle permission & Build the spring boot executable jar
     - name: Grant execute permission for Gradle
       run: chmod +x ./gradlew

     - name: Build with Gradle
       run: ./gradlew clean bootJar

    # 4. Log in to Docker Hub
     - name: Log in to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKER_HUB_USERNAME }}
         password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # 5. Build the docker image
     - name: Build and push Docker image
       uses: docker/build-push-action@v3
       with:
         context: .
         push: true
         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-api:latest

    # 6. Add SSH key to agent for deployment
     - name: Add SSH key
       uses: webfactory/ssh-agent@v0.5.3
       with:
         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # 7. Deploy to DigitalOcean Droplet
     - name: Deploy to DigitalOcean Droplet
       uses: appleboy/ssh-action@v0.1.6
       with:
         host: ${{ secrets.DROPLET_IP }}
         username: ${{ secrets.DROPLET_USER }}
         key: ${{ secrets.SSH_PRIVATE_KEY }}
         script: echo "SSH connection successful" |
           cd /root/renter-score
           docker-compose down
           docker-compose pull --ignore-pull-failures
           docker-compose up -d --force-recreate
           docker image prune -af
